name: "GoReleaser"

on:
  workflow_call:
    inputs:
      docker:
        required: false
        default: false
        description: "Enable docker push"
        type: boolean
      apt:
        required: false
        default: false
        description: "Enable storing dpkg artifacts"
        type: boolean
      apt-artifact:
        required: false
        default: "dpkg-files"
        description: "dpkg artifact name"
        type: string
    secrets:
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false
      DOCKER_GITHUB_TOKEN:
        required: false
      GO_RELEASER_GITHUB_TOKEN:
        required: false

jobs:
  goreleaser:
    name: "GoReleaser"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      if: ${{ hashFiles('go.mod') != '' }}
      uses: actions/setup-go@v5
      with:
        cache: false
        go-version: ^1
      id: go

    - name: Set up go env
      if: ${{ hashFiles('go.mod') != '' }}
      run: export PATH=${PATH}:`go env GOPATH`/bin

    - name: Docker Login (Docker Hub)
      uses: docker/login-action@v3
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      if: ${{ inputs.docker && (env.DOCKER_USERNAME != '') && (env.DOCKER_PASSWORD != '') }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Login (GitHub Container Registry)
      uses: docker/login-action@v3
      env:
        DOCKER_GITHUB_TOKEN: ${{ secrets.DOCKER_GITHUB_TOKEN }}
      if: ${{ inputs.docker && env.DOCKER_GITHUB_TOKEN != '' }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_GITHUB_TOKEN }}

    - name: Install Mage
      if: ${{ hashFiles('magefiles/*') != '' }}
      uses: magefile/mage-action@v3
      with:
        install-only: true

    - name: Run CI Target
      if: ${{ hashFiles('Makefile') != '' }}
      run: make ci

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        version: latest
        args: release --clean
      env:
        GOVERSION_NR: ${{ steps.go.outputs.go-version }}
        GITHUB_TOKEN: ${{ secrets.GO_RELEASER_GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.GO_RELEASER_GITHUB_TOKEN }}

    - name: Store dpkg artifacts
      if: ${{ inputs.apt }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.apt-artifact }}
        path: dist/*.deb
